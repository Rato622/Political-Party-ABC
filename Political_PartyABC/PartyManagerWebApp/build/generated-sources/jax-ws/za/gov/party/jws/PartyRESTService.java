
package za.gov.party.jws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PartyRESTService", targetNamespace = "http://jws.party.gov.za/")
@XmlSeeAlso({
    za.gov.party.jws.ObjectFactory.class,
    za.gov.validator.jws.ObjectFactory.class
})
public interface PartyRESTService {


    /**
     * 
     * @param id
     * @throws ExceptionException
     */
    @WebMethod(operationName = "remove_1")
    @RequestWrapper(localName = "remove_1", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Remove1")
    @ResponseWrapper(localName = "remove_1Response", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Remove1Response")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/remove_1Request", output = "http://jws.party.gov.za/PartyRESTService/remove_1Response", fault = {
        @FaultAction(className = ExceptionException.class, value = "http://jws.party.gov.za/PartyRESTService/remove_1/Fault/Exception_Exception")
    })
    public void remove1(
        @WebParam(name = "id", targetNamespace = "")
        Long id)
        throws ExceptionException
    ;

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Remove")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        Member entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.CountResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/countRequest", output = "http://jws.party.gov.za/PartyRESTService/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns za.gov.party.jws.Member
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/findRequest", output = "http://jws.party.gov.za/PartyRESTService/findResponse")
    public Member find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param id
     * @return
     *     returns za.gov.party.jws.Member
     */
    @WebMethod(operationName = "find_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find_1", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Find1")
    @ResponseWrapper(localName = "find_1Response", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Find1Response")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/find_1Request", output = "http://jws.party.gov.za/PartyRESTService/find_1Response")
    public Member find1(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Create")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/create")
    public void create(
        @WebParam(name = "entity", targetNamespace = "")
        Member entity);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countREST", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.CountREST")
    @ResponseWrapper(localName = "countRESTResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.CountRESTResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/countRESTRequest", output = "http://jws.party.gov.za/PartyRESTService/countRESTResponse")
    public String countREST();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Edit")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        Member entity);

    /**
     * 
     * @param id
     * @param entity
     */
    @WebMethod(operationName = "edit_1")
    @Oneway
    @RequestWrapper(localName = "edit_1", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.Edit1")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/edit_1")
    public void edit1(
        @WebParam(name = "id", targetNamespace = "")
        Long id,
        @WebParam(name = "entity", targetNamespace = "")
        Member entity);

    /**
     * 
     * @param from
     * @param to
     * @return
     *     returns java.util.List<za.gov.party.jws.Member>
     */
    @WebMethod(operationName = "findRange_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange_1", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindRange1")
    @ResponseWrapper(localName = "findRange_1Response", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindRange1Response")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/findRange_1Request", output = "http://jws.party.gov.za/PartyRESTService/findRange_1Response")
    public List<Member> findRange1(
        @WebParam(name = "from", targetNamespace = "")
        Integer from,
        @WebParam(name = "to", targetNamespace = "")
        Integer to);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<za.gov.party.jws.Member>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindRangeResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/findRangeRequest", output = "http://jws.party.gov.za/PartyRESTService/findRangeResponse")
    public List<Member> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @return
     *     returns java.util.List<za.gov.party.jws.Member>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.FindAllResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/findAllRequest", output = "http://jws.party.gov.za/PartyRESTService/findAllResponse")
    public List<Member> findAll();

    /**
     * 
     * @param memberXML
     * @throws Exception_Exception
     * @throws ExceptionException
     */
    @WebMethod
    @RequestWrapper(localName = "addMember", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.AddMember")
    @ResponseWrapper(localName = "addMemberResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.AddMemberResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/addMemberRequest", output = "http://jws.party.gov.za/PartyRESTService/addMemberResponse", fault = {
        @FaultAction(className = ExceptionException.class, value = "http://jws.party.gov.za/PartyRESTService/addMember/Fault/Exception_Exception"),
        @FaultAction(className = Exception_Exception.class, value = "http://jws.party.gov.za/PartyRESTService/addMember/Fault/Exception")
    })
    public void addMember(
        @WebParam(name = "memberXML", targetNamespace = "")
        String memberXML)
        throws ExceptionException, Exception_Exception
    ;

    /**
     * 
     * @param memberXML
     * @throws Exception_Exception
     * @throws ExceptionException
     */
    @WebMethod
    @RequestWrapper(localName = "updateMember", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.UpdateMember")
    @ResponseWrapper(localName = "updateMemberResponse", targetNamespace = "http://jws.party.gov.za/", className = "za.gov.party.jws.UpdateMemberResponse")
    @Action(input = "http://jws.party.gov.za/PartyRESTService/updateMemberRequest", output = "http://jws.party.gov.za/PartyRESTService/updateMemberResponse", fault = {
        @FaultAction(className = ExceptionException.class, value = "http://jws.party.gov.za/PartyRESTService/updateMember/Fault/Exception_Exception"),
        @FaultAction(className = Exception_Exception.class, value = "http://jws.party.gov.za/PartyRESTService/updateMember/Fault/Exception")
    })
    public void updateMember(
        @WebParam(name = "memberXML", targetNamespace = "")
        String memberXML)
        throws ExceptionException, Exception_Exception
    ;

}
